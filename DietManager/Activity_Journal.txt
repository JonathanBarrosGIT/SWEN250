SWEN-250 Activity Journal
Ruby - Diet Manager

Name: Jonathan Correia de Barros

================================================================
Level 1 - Food DB Load - Start
Estimated Time	5:00
Plan for this level: To go through the file. Create an array of objects (Basic food and Recipe).
Try to use the principle of separation of concerns when each class would be responsible for its own manipulation.
Create the unit test files in order to assure the correct functionality of the program.


Level 1 - Food DB Load - Complete
Actual Time	12:00
Time management wasn't well enough. Most of the time was spent by learning the language.
I could learn more how to handle object in Ruby.
I thought it wouldn't be so long to finish the level 1, but it took so long once I had a lot of trouble with bugs because
of the inexperience with the language.

================================================================
Level 2 - Print & Find - Start
Estimated Time	03 00
Plan for this level: Once the class with the database was created and handled, this level would be simpler. So
the plan for this level was to create the methods within the class FoodDatabase "food_db.rb" to perform the
commands. Another point was to change the menu in order to receive more complex commands.

Level 2  - Print & Find - Complete
Actual Time	2 00
THe development of this level was very much easier and faster than the previous level. I believe that was because of
two reasons: The assignment for this level is simpler compared to the construction of the previous one. Also, the
knowledge upon the programming language increased a lot more compared to when I've begun coding the project.


================================================================
Level 3 - Database Update - Start
Estimated Time	4 30
Plan for this level: Update the class FoodDatabase with the functions necessary to reach the level's goals.
Update the menu with more complex commands using space or comma.

Level 3 - Database Update  - Complete
Actual Time	3 30
The development of coding has became easier and more comfortable once the first obstacles were overcame throughout.
the first two levels. Most of my previous work could be reused or adapted to reach the goals of this level.

================================================================
Level 4 - Logging Foods - Start
Estimated Time	5 00
Plan for this level: Create the log object containing name and date. Also, create a class to handle the operations
related to the log.

Level 4 - Logging Foods - Complete
Actual Time	4 30
I could learn a basic of how to handle Date type using the Ruby library 'Date'. The management of time was better than
previous versions. It could be done quicker, but learning how to handle the Date time took some time.

================================================================
Level 5 - Show & Delete - Start
Estimated Time	3 00
Plan for this level: Based on the previous steps, this level is only a complementary part of previous work. So the plan
was to create the methods to go through the database already created and print the information according to what was
required or delete.


Level 5 - Show & Delete - Complete
Actual Time	01 30
I am confident in saying that this was the easiest level of them all. That's because of all the time spent in the project and
all the knowledge obtained throughout the entire process. This said, the delete is the easiest method on this step, I only had to make
sure that only one element was deleted. And the show method took a bit longer but it wasn't a problem to develop once the whole program
was well known at this point.
================================================================
Overall Summary
Estimated Total Time	20 30
Actual Total Time	23 30
Project reflection: In the beginning, I underestimated the complexity of the project and I didn't manage well the time, but once the
work was flowing well, each level became easier and easier. In the final you can see that it's not a very complicated project but it requires
a good knowledge on different structures and nuances of the language. After about 2 weeks working on the project, I gained a good amount of
knowledge on the language and this is very good if we think that 2 weeks ago I knew nothing of Ruby.